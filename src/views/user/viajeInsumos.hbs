{{#if concretado}}
<div class="m-3 container_tablas" id="containerResumen">
    <div class="row justify-content-center">
        <div class="col-md-6 order-md-2 mb-4 py-2">
            <h4 class="mb-3 text-light">Insumos comprados</h4>
            <ul class="list-group mb-3">
                {{#each insumosListar}}
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">Producto {{indice}}</h6>
                        <small class="text-muted">{{nombre}}</small>
                    </div>
                    <span class="text-muted">${{total}}</span>
                </li>
                {{else}}
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <small class="text-muted">No hay insumos agregados</small>
                </li>
                {{/each}}
            </ul>
        </div>
    </div>
    <div class="modal-footer"></div>
    <div class="d-flex justify-content-between flex-wrap">
        <a href="/user/tickets">
            <button type="button" class="btn btn-secondary rounded-pill fs-5">
                <i class="fas fa-chevron-left"></i> VOLVER ATRÁS
            </button>
        </a>
    </div>
</div>


{{else}}
    {{#if editar}}
    <div class="m-3 container_tablas" id="containerResumen">
        <div class="row justify-content-center">
            <div class="col-md-6 order-md-2 mb-4 py-2">
                <h4 class="mb-3 text-light">Insumos comprados</h4>
                <ul class="list-group mb-3">
                    {{#each insumosListar}}
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">Producto {{indice}}</h6>
                            <small class="text-muted">{{nombre}}</small>
                        </div>
                        <span class="text-muted">${{total}}</span>
                    </li>
                    {{else}}
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <small class="text-muted">No hay insumos agregados</small>
                    </li>
                    {{/each}}
                </ul>
            </div>
        </div>
    </div>
    {{/if}}
    <div class="m-3 container_tablas">
        <strong>
            <table id="table_trips" data-toggle="table" data-show-button-text="true" data-locale="es-AR">
                <thead class="table-dark">
                    <tr>
                        <th colspan="3" class="th_viajeInsumos1"><span>Compre sus insumos para el viaje</span></th>
                    </tr>
                    <tr>
                        <th>Nombre</th>
                        <th>Precio</th>
                        <th><i class="fas fa-cart-plus"></i></th>
                    </tr>
                </thead>
                <tbody>
                    {{#each insumos}}
                    <tr>
                        <td>{{nombre}}</td>
                        <td>$ {{precio}}</td>
                        <td><a onclick='agregarInsumo({{id_insumo}})' id="link_viajeInsumos"><i class="fas fa-plus-circle"></i></a></td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </strong>

        <strong>
            <table class="table my-4" id="table_trips">
                <thead class="table-dark">
                    <tr>
                        <th colspan="4" class="th_viajeInsumos2"><span>Insumos agregados</span></th>
                    </tr>
                    <tr>
                        <th>Nombre</th>
                        <th>Cantidad</th>
                        <th>Total</th>
                        <th><i class="fas fa-trash-alt"></i></th>
                    </tr>
                </thead>
                <tbody id="tbodyId">
                </tbody>
            </table>
        </strong>

        <div class="my-2 py-2 px-4 rounded-1 text-end" id="div_subtotal">
            <p><u>Subtotal</u>: $<strong id="testStrong"></strong></p>
        </div>
        <div class="modal-footer"></div>
        <div class="d-flex justify-content-between flex-wrap">
            {{#if editar}}
            <a href="/user/tickets">
            {{else}}
            <a href="/compra?id={{id_viaje}}&quantity={{quantity}}">
            {{/if}}
                <button type="button" class="btn btn-secondary rounded-pill fs-5">
                    <i class="fas fa-chevron-left"></i> VOLVER ATRÁS
                </button>
            </a>
            {{#if editar}}
            <button onclick="confirmAndBuy({{idUsuarioViaje}})" type="button" class="btn btn-primary rounded-pill fs-5">
                CONFIRMAR Y PAGAR <i class="fas fa-chevron-right"></i>
            {{else}}
            <button onclick="confirmAndResume({{id_viaje}}, {{quantity}})" type="button" class="btn btn-primary rounded-pill fs-5">
                CONFIRMAR Y CONTINUAR <i class="fas fa-chevron-right"></i>
            {{/if}}
            </button>
        </div>
    </div>

    <form action="/confirmInsumos" method="POST" id="confirmInsumosForm" hidden>
        <input type="number" name="id_viaje" id="id_viaje">
        <input type="number" name="quantity" id="quantity">
        <input type="number" name="subtotal" id="subtotal">
        <input name="insumos" id="insumos">
    </form>

    <div class="modal fade" id="modalPayment" tabindex="-1" aria-labelledby="modalPaymentLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">PAGO</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cancelar"></button>
                </div>
                <div class="modal-body">
                    <form id="modalFormPayment" action="/profile/editarPlan" method="POST">
                        <div class="mb-3">
                            <div class="container mb-3">
                                <div class="card" id="card-inputs">
                                    <h5 class="card-header bg-dark">Datos de la tarjeta</h5>
                                    <div class="card-body" style="background-color: #3f4447!important;">

                                        <div class="mb-3">
                                            <label for="owner" class="form-label">Nombre y apellido del titular</label>
                                            <input type="text" class="form-control mb-3" id="owner" name="owner"
                                                autocomplete='off'>
                                            <div class="invalid-feedback">
                                                <p id="invalid-owner"></p>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label for="cardnumber" class="form-label">Numero de tarjeta</label>
                                        <input type="text" placeholder="xxxx xxxx xxxx xxxx" class="form-control mb-3"
                                            id="cardnumber" name="cardnumber" autocomplete='off'>
                                            <div class="invalid-feedback">
                                                <p id="invalid-cardnumber"></p>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label for="cvv" class="form-label">Codigo de seguridad</label>
                                            <input type="text" placeholder="xxx" class="form-control mb-3" id="cvv" name="cvv"
                                            autocomplete='off'>
                                            <div class="invalid-feedback">
                                                <p id="invalid-cvv"></p>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label for="expireddate" class="form-label">Fecha de vencimiento</label>
                                            <input type="text" placeholder="--/--" class="form-control mb-3" id="expireddate"
                                                name="expireddate" autocomplete='off'>
                                            <div class="invalid-feedback">
                                                <p id="invalid-expireddate"></p>
                                            </div>
                                        </div>
                                        

                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-primary"
                                                data-bs-dismiss="modal">Cancelar</button>
                                            <button type="submit" class="btn btn-success"
                                                id="guardarButton">Guardar</button>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

{{/if}}

<script>
    function tryParseJSON (jsonString){
        try {
            var o = JSON.parse(jsonString);

            if (o && typeof o === "object") {
                return o;
            }
        }
        catch (e) { }
        return null;
    }

    function decodeJSON(obj) {
        obj = decodeURI(obj);
        return tryParseJSON(obj);
    };
    
    var cantidadesDisponiles;
    var insumosComprados = [];
    var idGlobal;
    var subtotal = 0;
    $(document).ready(function () {
        cantidadesDisponiles = decodeJSON("{{insumosTest}}");
        subtotal = {{subtotal}};
        $('#testStrong').text(subtotal)
    });

    function agregarInsumo(id_insumo) {
        let pos = cantidadesDisponiles.findIndex(x => x.id_insumo === id_insumo);
        const insumo = cantidadesDisponiles[pos];
        Swal.fire({
            title: insumo.nombre,
            input: 'number',
            inputPlaceholder: 'Ingrese la cantidad',
            showCancelButton: true,
            confirmButtonText: 'Agregar',
            cancelButtonText: 'Cancelar',
            showLoaderOnConfirm: true,
            preConfirm: (value) => {
                return new Promise( (resolve) => {
                    var result = { ok: true, msg: '' };
                    if (value != '') {
                        if (value > insumo.cantidad) {
                            result.ok = false;
                            result.msg = 'Cantidad no disponible!'
                        } else if (value <= 0) {
                            result.ok = false;
                            result.msg = 'Ingrese una cantidad mayor a 0!'
                        } else {
                            result.cantidad = value;
                        }
                    } else {
                        result.ok = false;
                        result.msg = 'Ingresa una cantidad!'
                    }
                    
                    resolve(result);
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(response.msg)
                    }
                    insumo.cantidad = +insumo.cantidad - +response.cantidad;
                    const insumoAgregado = { 
                        id_insumo: insumo.id_insumo,
                        nombre: insumo.nombre,
                        precio: insumo.precio,
                        cantidad: +response.cantidad,
                        total: +insumo.precio * +response.cantidad
                    }
                    pos = insumosComprados.findIndex(x => x.nombre === insumo.nombre)
                    if (pos == -1) {
                        const tbody = document.getElementById('tbodyId');
                        tbody.innerHTML = tbody.innerHTML + `
                        <tr>
                            <td>${insumoAgregado.nombre}</td>
                            <td id="cantidadId${insumosComprados.length}">${insumoAgregado.cantidad}</td>
                            <td id="totalId${insumosComprados.length}">$ ${insumoAgregado.total}</td>
                            <td><a onclick="eliminarInsumo(${id_insumo}, ${insumosComprados.length})" class="link-danger linkEliminar"><i class="fas fa-minus-circle"></i></a></td>
                        </tr>
                        `  
                        insumosComprados.push(insumoAgregado);
                    } else {
                        insumosComprados[pos].cantidad += +response.cantidad;
                        insumosComprados[pos].total += +insumoAgregado.total

                        $(`#cantidadId${pos}`).text(insumosComprados[pos].cantidad);
                        $(`#totalId${pos}`).text('$ '+insumosComprados[pos].total);
                    }
                    subtotal = subtotal + insumoAgregado.total;
                    $('#testStrong').text(subtotal)
                    return true
                })
                .catch(error => {
                    Swal.showValidationMessage(error.message)
                })
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    icon: 'success',
                    title: 'Insumo/s agregado/s exitosamente!'
                })
            }
        })
    }   

    function eliminarInsumo(id_insumo, posInsumoComprado) {
        let pos = cantidadesDisponiles.findIndex(x => x.id_insumo === id_insumo);
        const insumo = cantidadesDisponiles[pos];
        let posComprado = insumosComprados.findIndex(x => x.id_insumo === id_insumo);
        const insumoAgregado = insumosComprados[posComprado];
        Swal.fire({
            title: insumo.nombre,
            input: 'number',
            inputPlaceholder: 'Ingrese la cantidad',
            showCancelButton: true,
            confirmButtonText: 'Quitar',
            cancelButtonText: 'Cancelar',
            showLoaderOnConfirm: true,
            preConfirm: (value) => {
                return new Promise( (resolve) => {
                    var result = { ok: true, msg: '' };
                    if (value != '') {
                        if (value > insumoAgregado.cantidad) {
                            result.ok = false;
                            result.msg = 'La cantidad debe ser menor o igual a la agregada!'
                        } else if (value <= 0) {
                            result.ok = false;
                            result.msg = 'Ingrese una cantidad mayor a 0!'
                        } else {
                            result.cantidad = value;
                        }
                    } else {
                        result.ok = false;
                        result.msg = 'Ingresa una cantidad!'
                    }
                    
                    resolve(result);
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(response.msg)
                    }
                    let montoQuitado = (+insumoAgregado.precio * +response.cantidad);
                    insumo.cantidad = +insumo.cantidad + +response.cantidad;
                    insumoAgregado.cantidad -= +response.cantidad;
                    insumoAgregado.total -= montoQuitado

                    $(`#cantidadId${posInsumoComprado}`).text(insumoAgregado.cantidad);
                    $(`#totalId${posInsumoComprado}`).text('$ '+insumoAgregado.total);
                    subtotal = subtotal - montoQuitado;
                    $('#testStrong').text(subtotal)
                    if (insumoAgregado.cantidad == 0) {
                        document.getElementById(`cantidadId${posInsumoComprado}`).parentElement.remove();
                        insumosComprados.splice(posComprado, 1);
                    }
                    console.log('COMPRADOS: ', insumosComprados);
                    return true
                })
                .catch(error => {
                    Swal.showValidationMessage(error.message)
                })
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    icon: 'success',
                    title: 'Insumo/s agregado/s exitosamente!'
                })
            }
        })
    }

    function confirmAndResume(id_viaje, quantity) {
        $('#id_viaje').val(id_viaje);
        $('#quantity').val(quantity);
        $('#subtotal').val(subtotal);
        $('#insumos').val(encodeURI(JSON.stringify(insumosComprados)));
        $('#confirmInsumosForm').submit();
    }

    function confirmAndBuy(idUsuarioViaje) {
        if (insumosComprados.length == 0) {
            Swal.fire({
                icon: 'error',
                title: 'Debes agregar al menos 1 insumo!'
            })
        } else {
            idGlobal = idUsuarioViaje;
            $('#modalPayment').modal('show');
        }
    }

    $('#cardnumber').focusout(function () {
        const cardnumberElement = $('#cardnumber');
        if (cardnumberElement.val() == null || cardnumberElement.val() == "") {
            $('#invalid-cardnumber').text('Este campo no puede estar vacio!');
            cardnumberElement.addClass('is-invalid');
        } else {
            const cardnumberValue = cardnumberElement.val();
            $.ajax('/profile/editarPlan/cardnumber', {
                type: 'POST',
                data: { cardnumberValue },
                success: function (res) {
                    if (res) {
                        cardnumberElement.removeClass('is-invalid');
                        cardnumberElement.addClass('is-valid');
                    } else {
                        $('#invalid-cardnumber').text('Lo siento, Numero de tarjeta invalido!');
                        cardnumberElement.addClass('is-invalid');
                    }
                }
            });
        };
    });

    $('#cvv').focusout(function () {
        const cvvElement = $('#cvv');
        if (cvvElement.val() == null || cvvElement.val() == "") {
            $('#invalid-cvv').text('Este campo no puede estar vacio!');
            cvvElement.addClass('is-invalid');
        } else {
            const cvvValue = cvvElement.val();
            $.ajax('/profile/editarPlan/cvv', {
                type: 'POST',
                data: { cvvValue },
                success: function (res) {
                    if (res) {
                        cvvElement.removeClass('is-invalid');
                        cvvElement.addClass('is-valid');
                    } else {
                        $('#invalid-cvv').text('Lo siento, CVV invalido!');
                        cvvElement.addClass('is-invalid');
                    }
                }
            });
        };
    });

    $('#expireddate').focusout(function () {
        const expireddateElement = $('#expireddate');
        if (expireddateElement.val() == null || expireddateElement.val() == "") {
            $('#invalid-expireddate').text('Este campo no puede estar vacio!');
            expireddateElement.addClass('is-invalid');
        } else {
            const expireddateValue = expireddateElement.val();
            $.ajax('/profile/editarPlan/expireddate', {
                type: 'POST',
                data: { expireddateValue },
                success: function (res) {
                    if (res) {
                        expireddateElement.removeClass('is-invalid');
                        expireddateElement.addClass('is-valid');
                    } else {
                        $('#invalid-expireddate').text('Lo siento, Fecha de expiracion invalida!');
                        expireddateElement.addClass('is-invalid');
                    }
                }
            });
        };
    });

    $('#owner').focusout(function () {
        const ownerElement = $('#owner');
        if (ownerElement.val() == null || ownerElement.val() == "") {
            $('#invalid-owner').text('Este campo no puede estar vacio!');
            ownerElement.addClass('is-invalid');
        } else {
            ownerElement.removeClass('is-invalid');
            ownerElement.addClass('is-valid');
        };
    });

    $("#modalFormPayment").submit(function (e) {

        e.preventDefault();

        var form = $(this);
        var url = form.attr('action');
        var array = form.serializeArray();
        var id = array[0].value;
        $.ajax({
            type: "POST",
            url: url,
            data: form.serialize(),
            success: function (data) {
                if (data.length > 0) {


                    $('#owner').removeClass('is-invalid');
                    $('#cvv').removeClass('is-invalid');
                    $('#expireddate').removeClass('is-invalid');
                    $('#cardnumber').removeClass('is-invalid');

                    $('#owner').addClass('is-valid');
                    $('#cvv').addClass('is-valid');
                    $('#expireddate').addClass('is-valid');
                    $('#cardnumber').addClass('is-valid');

                    $.each(data, function (index, value) {
                        if (value.param == 'owner') {
                            $('#owner').addClass('is-invalid');
                            $('#invalid-owner').text(value.msg);
                        }
                        if (value.param == 'cvv') {
                            $('#cvv').addClass('is-invalid');
                            $('#invalid-cvv').text(value.msg);
                        }
                        if (value.param == 'expireddate') {
                            $('#expireddate').addClass('is-invalid');
                            $('#invalid-expireddate').text(value.msg);
                        }
                        if (value.param == 'cardnumber') {
                            $('#cardnumber').addClass('is-invalid');
                            $('#invalid-cardnumber').text(value.msg);
                        }                     
                    });
                } else {
                    Swal.fire({
                        title: 'Seguro que quieres completar el pago?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Si, pagar!',
                    }).then((result) => {

                        if (result.isConfirmed) {
                            $.ajax('/user/agregarInsumos', {
                                type: 'POST',
                                data: { idGlobal, subtotal, insumos: encodeURI(JSON.stringify(insumosComprados)) }
                            })
                            Swal.fire({
                                icon: 'success',
                                title: 'Pago realizado exitosamente!',
                                html: 'Sera redirigido automaticamente a sus viajes realizados.',
                                timer: 3000,
                                timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading()
                                },
                                willClose: () => {
                                    window.location.replace('/user/tickets')
                                }
                            })
                            $("#owner").removeClass("is-invalid is-valid");
                            $("#cardnumber").removeClass("is-invalid is-valid");
                            $("#cvv").removeClass("is-invalid is-valid");
                            $("#expireddate").removeClass("is-invalid is-valid");

                            $('#modalEditarPlan').modal('toggle');
                        }
                    })
                }
            }
        })
    });

</script>